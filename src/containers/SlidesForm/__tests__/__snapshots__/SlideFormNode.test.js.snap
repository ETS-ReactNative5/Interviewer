// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SlideFormNode /> should render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <withProps(SlideFormNode)
    form={
      Object {
        "entity": "node",
        "title": "alpha",
        "type": "person",
      }
    }
    item={
      Object {
        "attributes": Object {
          "foo": "bar",
        },
      }
    }
    nodeIndex={1}
    stageIndex={1}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "form": Object {
        "entity": "node",
        "title": "alpha",
        "type": "person",
      },
      "id": undefined,
      "initialValues": Object {
        "foo": "bar",
      },
      "item": Object {
        "attributes": Object {
          "foo": "bar",
        },
      },
      "nodeIndex": 1,
      "onUpdate": [Function],
      "stageIndex": 1,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "form": Object {
          "entity": "node",
          "title": "alpha",
          "type": "person",
        },
        "id": undefined,
        "initialValues": Object {
          "foo": "bar",
        },
        "item": Object {
          "attributes": Object {
            "foo": "bar",
          },
        },
        "nodeIndex": 1,
        "onUpdate": [Function],
        "stageIndex": 1,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
